<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[karidyang的技术博客]]></title>
  <link href="http://karidyang.github.io/atom.xml" rel="self"/>
  <link href="http://karidyang.github.io/"/>
  <updated>2014-03-11T18:24:48+08:00</updated>
  <id>http://karidyang.github.io/</id>
  <author>
    <name><![CDATA[karidyang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用Nginx的一些心得体会]]></title>
    <link href="http://karidyang.github.io/blog/2014/03/11/use-nginx/"/>
    <updated>2014-03-11T18:19:10+08:00</updated>
    <id>http://karidyang.github.io/blog/2014/03/11/use-nginx</id>
    <content type="html"><![CDATA[<h4>1、安装Nginx</h4>

<p>在linux上安装nginx，可以使用源码安装，也可以使用包安装器安装，如 apt-get, yum等，使用包安装器安装比较简单，所以，这里我们介绍源码安装。</p>

<p>首先需要下载源码包，可以在这里下载<a href="http://nginx.org/download/nginx-1.4.2.tar.gz">nginx</a></p>

<p>下载之后就需要安装。</p>

<pre><code>tar -zxvf nginx-1.4.2.tar.gz
cd nginx-1.4.2
./configure --prefix=/usr/local/nginx_8080 --user=www --group=www  --with-http_stub_status_module --without-http_fastcgi_module --without-http_autoindex_module --without-http_ssi_module --without-mail_pop3_module --without-mail_imap_module --without-mail_smtp_module --without-http_uwsgi_module --without-http_scgi_module  --without-http_memcached_module
make
make  install
</code></pre>

<p>说明：</p>

<p>&mdash;prefix : 安装目录<br/>
&mdash;user: linux中的用户<br/>
&mdash;group: linux中的用户组<br/>
&mdash;with-http_stub_status_module : 安装http_status模块<br/>
&mdash;without-http_fastcgi_module : 如不需要后端接入php、asp等可以不安装fastcgi模块<br/>
&mdash;without-http_autoindex_module : 不安装文件目录索引模块<br/>
&mdash;without-http_ssi_module : 不安装https模块<br/>
&mdash;without-mail_pop3_module &mdash;without-mail_imap_module &mdash;without-mail_smtp_module : 不安装mail模块<br/>
&mdash;without-http_memcached_module : 不安装memcached模块<br/></p>

<p>编译以后，会在安装目录下找到conf目录，我们后面的主要配置就是编辑这个目录下的nginx.conf文件。</p>

<h4>2、配置</h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用ImageMagick处理图片]]></title>
    <link href="http://karidyang.github.io/blog/2014/03/11/use-imagemagick/"/>
    <updated>2014-03-11T18:06:07+08:00</updated>
    <id>http://karidyang.github.io/blog/2014/03/11/use-imagemagick</id>
    <content type="html"><![CDATA[<p>在处理图片的过程中，一般都会使用ImageMagick，下面我来介绍下如何在CentOS系统中安装ImageMagick。</p>

<p>首先必须查看下系统是否已安装了ImageMagick</p>

<pre><code>identify -version
</code></pre>

<p>如果已安装，那么先卸载掉旧版本</p>

<pre><code>yum remove ImageMagick
</code></pre>

<p>然后下载安装源文件</p>

<pre><code>cd /usr/local/src/; wget ftp://mirror.aarnet.edu.au/pub/imagemagick/    ImageMagick-6.8.7-9.tar.gz
</code></pre>

<p>解压</p>

<pre><code>tar zxvf ImageMagick-6.8.7-9.tar.gz
</code></pre>

<p>编译</p>

<pre><code>cd ImageMagick-6.8.7-9
./configure
make 
make install
ldconfig /usr/local/lib
</code></pre>

<p>最后使用命令测试</p>

<pre><code>convert logo: logo.gif
</code></pre>

<h6>在Java中的使用</h6>

<p>在java中要使用ImageMagick的话，必须要引入一个jar包，它就是im4java-1.4.0.jar，使用maven的同学，可以直接使用</p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.im4java&lt;/groupId&gt;
    &lt;artifactId&gt;im4java&lt;/artifactId&gt;
    &lt;version&gt;1.4.0&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p>直接上代码说明比较方便</p>

<pre><code>public class ImageUtils {
    private ConvertCmd cmd = new ConvertCmd();
        private ImageUtils() {
        // Windows下需要以下配置
        // ImageMagick在windows中的安装目录
        String im = "C:\\Program Files\\ImageMagick-6.8.7-Q16"
        ProcessStarter.setGlobalSearchPath(im);
    }

    //缩放
    public void resize(Integer width, Integer height, String src, String dst) throws Exception {
        IMOperation imop = new IMOperation();
        imop.addImage(src);
        imop.resize(width, height);
        imop.addImage(dst);
        cmd.run(imop);

    }

    //剪裁
    public void crop(String dst,Integer srcWidth, Integer srcHeight, Integer newWidth, Integer newHeight) throws Exception {
        IMOperation imop = new IMOperation();
        imop.addImage(dst);
        imop.crop(srcWidth, srcHeight, newWidth, newHeight);
        imop.addImage(dst);
        cmd.run(imop);

    }
</code></pre>

<p>更多功能还请参考官方文档.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[优化Jetty]]></title>
    <link href="http://karidyang.github.io/blog/2014/01/20/optimize-jetty/"/>
    <updated>2014-01-20T13:41:03+08:00</updated>
    <id>http://karidyang.github.io/blog/2014/01/20/optimize-jetty</id>
    <content type="html"><![CDATA[<h2>调整Linux内核参数</h2>

<h5>调整Tcp Buffer Sizes</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>net.core.rmem_max = 16777216
</span><span class='line'>net.core.wmem_max = 16777216
</span><span class='line'>net.ipv4.tcp_rmem = 4096 87380 4194304
</span><span class='line'>net.ipv4.tcp_wmem = 4096 16384 4194304</span></code></pre></td></tr></table></div></figure>


<h4>调整Queue Sizes</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>net.core.somaxconn = 4096
</span><span class='line'>
</span><span class='line'>net.core.netdev_max_backlog = 16385
</span><span class='line'>net.ipv4.tcp_max_syn_backlog = 8192
</span><span class='line'>net.ipv4.tcp_syncookies = 1</span></code></pre></td></tr></table></div></figure>


<h4>调整Ports</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>net.ipv4.ip_local_port_range = 1024 65000
</span><span class='line'>net.ipv4.tcp_tw_recycle = 1</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>调整JVM参数</h2>

<hr />

<h2>调整Jetty配置</h2>

<h4>调整Acceptors数量</h4>

<p>大于等于1，小于等于CPU数量</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Set name="Acceptors"&gt;4&lt;/Set&gt;</span></code></pre></td></tr></table></div></figure>


<h4>为线程池的阻塞队列设置默认大小</h4>

<p>默认大小的值以每分钟的请求数来计算</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Set name="ThreadPool"&gt;
</span><span class='line'>      &lt;!-- Default queued blocking threadpool --&gt;
</span><span class='line'>      &lt;New class="org.eclipse.jetty.util.thread.QueuedThreadPool"&gt;
</span><span class='line'>        &lt;Arg&gt;
</span><span class='line'>          &lt;New class="java.util.concurrent.ArrayBlockingQueue"&gt;
</span><span class='line'>            &lt;Arg type="int"&gt;6000&lt;/Arg&gt;
</span><span class='line'>          &lt;/New&gt;
</span><span class='line'>        &lt;/Arg&gt;
</span><span class='line'>        &lt;Set name="minThreads"&gt;10&lt;/Set&gt;
</span><span class='line'>        &lt;Set name="maxThreads"&gt;500&lt;/Set&gt;
</span><span class='line'>        &lt;Set name="detailedDump"&gt;false&lt;/Set&gt;
</span><span class='line'>      &lt;/New&gt;
</span><span class='line'>    &lt;/Set&gt;</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
